import java.util.*;
public class Stack {

    //Define the data members
	
    Queue<Integer> q1;
    Queue<Integer> q2;
    

    public Stack() {
        //Implement the Constructor
        q1 = new LinkedList<>();
        q2 = new LinkedList<>();
    }



    /*----------------- Public Functions of Stack -----------------*/


    public int getSize() { 
        
        return this.q1.size();
        //Implement the getSize() function
    }

    public boolean isEmpty() {
        
        return this.q1.size()==0;
        //Implement the isEmpty() function
    }

    public void push(int element) {
        
      
        //Implement the push(element) function
        this.q1.add(element);
        
    }
// 1 2 3 4 5 6
    public int pop() {
        //Implement the pop() function
        if(this.isEmpty()) return -1;
        
        while(this.q1.size()>1){
            this.q2.add(this.q1.poll());
            
        }
        int ans = q1.poll();
        
        Queue<Integer> temp = this.q2;
        this.q2 = this.q1;
        this.q1 = temp;
        
        return ans;
    }

    public int top() {
        //Implement the top() function
        if(this.isEmpty()) return -1;
        
        while(this.q1.size()>1){
            this.q2.add(this.q1.poll());
            
        }
        int ans = q1.poll();
        this.q2.add(ans);
        
        Queue<Integer> temp = this.q2;
        this.q2 = this.q1;
        this.q1 = temp;
        
        return ans;
        
    }
}
