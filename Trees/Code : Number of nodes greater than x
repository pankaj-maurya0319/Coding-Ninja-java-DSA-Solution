import java.util.*;
public class Solution {

/*	TreeNode class 
 * 
 * class TreeNode<T> {
		T data;
		ArrayList<TreeNode<T>> children;

		TreeNode(T data){
			this.data = data;
			children = new ArrayList<TreeNode<T>>();
		}
	}*/

	static int count = 0;
	//public static int numNodeGreater(TreeNode<Integer> root,int x){

		// Write your code here		
        
//         int count = 0;
//         Queue<TreeNode<Integer>> pendingNodes = new LinkedList<>();
        
//         pendingNodes.add(root);
        
//         while(!pendingNodes.isEmpty()){
            
//             TreeNode<Integer> frontNode = pendingNodes.remove();
            
//             if(frontNode.data > x){
//                 count++;
//             }
            
//             for(int i=0 ; i<frontNode.children.size(); i++){
//             	  pendingNodes.add(frontNode.children.get(i));  
//             }
            
//         }
        
//         return count;

	//}
    
    public static int numNodeGreater(TreeNode<Integer> root,int x){
        
        if(root == null)
        	return count;
        if(root.data>x)
            count++;
        
        for(int i=0; i<root.children.size(); i++){
          	int child = numNodeGreater(root.children.get(i),x);
          
        }
        
        return count;
        
    }
	
}
