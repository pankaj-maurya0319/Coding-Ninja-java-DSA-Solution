import java.util.ArrayList;
import java.util.PriorityQueue;
public class Solution {

	public static ArrayList<Integer> kLargest(int input[], int k) {
		
        ArrayList<Integer> ans = new ArrayList<>();
        PriorityQueue<Integer> pq = new PriorityQueue<>();
        
       
        
//         for( int i=0; i<input.length ; i++){
//             pq.add(input[i]);
//         }
        
//         for(int i=0; i<input.length-k; i++){
//             input[i] = pq.remove();
            
//         }
        
//         for(int j=input.length-k; j<input.length; j++){
//             ans.add(pq.remove());
//         }
        
        // another approach
        
        int i = 0;
        
        for( ; i<k ; i++){
            pq.add(input[i]);
        }
        
        for(; i<input.length; i++){
            int min = pq.remove();
            if(min > input[i]){
                pq.add(min);
            }else{
                pq.add(input[i]);
            }
        }
        
        while(!pq.isEmpty()){
            ans.add(pq.remove());
        }
        
        return ans;
		
	}
}
