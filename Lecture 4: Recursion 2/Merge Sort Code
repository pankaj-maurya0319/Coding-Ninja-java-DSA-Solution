public class solution {

	public static void mergeSort(int[] input){
		
        mergeSort(input,0,input.length-1);
        
        
	}
    
    public static void mergeSort(int[] input, int startIndex, int endIndex){
        
        if(startIndex >= endIndex){
            return;
        }
        
        int mid = (startIndex + endIndex)/2;
        
        mergeSort(input, startIndex, mid);
        mergeSort(input, mid+1, endIndex);
        
        mergeSort(input,startIndex, mid, endIndex);
    }
    
    public static void mergeSort(int input[], int s,int m, int e){
        
        int i,j,k;
    	int n1 = m - s+1;
        int n2 = e-m;
        
        int[] leftArr = new int[n1];
        int rightArr[] = new int[n2];
        
        for( i=0; i<n1; i++){

            leftArr[i] = input[s+i];
        }
        
        for( i=0; i<n2; i++){
            rightArr[i] = input[m+1+i];
        }
        
        i=0;
        j=0;
        k=s;
        
        while(i<n1 && j<n2){
            
            if(leftArr[i]>rightArr[j]){
                input[k]=rightArr[j];
                j++;
            }else{
                input[k]=leftArr[i];
                i++;
            }
           k++; 
        }
        
        while(i<n1){
            input[k] = leftArr[i];
            i++;
            k++;
        }
        
        while(j<n2){
            input[k] = rightArr[j];
            j++;
            k++;
        }
    }
}
