/*
	
	Following is the structure used to represent the Binary Tree Node

	class BinaryTreeNode<T> {
		T data;
		BinaryTreeNode<T> left;
		BinaryTreeNode<T> right;

		public BinaryTreeNode(T data) {
			this.data = data;
			this.left = null;
			this.right = null;
		}
	}

*/

public class Solution {

	public static void mirrorBinaryTree(BinaryTreeNode<Integer> root){
		//Your code goes here
        
        if(root == null)
            return ;
        
         BinaryTreeNode<Integer> left = null;
         BinaryTreeNode<Integer> right = null;
        
        if(root.left!=null){
             left = root.left;
        }
        
        if(root.right !=null){
             right = root.right;
        }
        
        // temp = left;
        root.left = right;
        root.right = left;
        
        mirrorBinaryTree(root.left);
        mirrorBinaryTree(root.right);
        
	}
	
}
