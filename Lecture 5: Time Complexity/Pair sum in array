import java.util.*;

public class Solution {	

	public static int pairSum(int[] arr, int num) {
		
        Arrays.sort(arr);
        int numPair =0;
        int startIndex=0;
        int endIndex = arr.length-1;
        
       while(startIndex<endIndex){
        if(arr[startIndex]+arr[endIndex]<num){
            startIndex++;
        }
        else if(arr[startIndex]+arr[endIndex] >num){
            endIndex--;
        }
        else{
            int elementAtStart=arr[startIndex];
            int elementAtend = arr[endIndex];
            if(elementAtStart==elementAtend){
                int totalElement=(endIndex - startIndex) +1;
                numPair+=(totalElement*(totalElement-1))/2;
                return numPair;
            }
            int tempStartIndex=startIndex+1;
            int tempEndIndex=endIndex-1;
            while(tempStartIndex<=tempEndIndex && arr[tempStartIndex]==arr[startIndex]){
                tempStartIndex+=1;
            }
            while(tempEndIndex>=tempStartIndex && arr[tempEndIndex]==arr[endIndex]){
                tempEndIndex-=1;
            }
            int totalElementFromStart= tempStartIndex-startIndex;
            int totalElementFromEnd = endIndex-tempEndIndex;
            
            numPair+=(totalElementFromStart * totalElementFromEnd);
            
            startIndex=tempStartIndex;
            endIndex=tempEndIndex;
        }
    }
    
    return numPair ;
	}
}
