
/*
    Following is the structure of the node class for a Singly Linked List

    class Node {
        int data;
        Node next;

        public Node(int data) {
            this.data = data;
            this.next = null;
        }

    }

*/

public class Stack {

    //Define the data members
    private Node head;
    private int size;


    public Stack() {
        //Implement the Constructor
        head = null;
        size=0;
    }



    /*----------------- Public Functions of Stack -----------------*/


    public int getSize() { 
        return size;
        //Implement the getSize() function
    }

    public boolean isEmpty() {
        
        //Implement the isEmpty() function
    	return (head == null);
    }

    public void push(int element) {
        //Implement the push(element) function
        
        Node newNode = new Node(element);
        
        if(head == null){
            head = newNode;
            head.next = null;
            size++;
        }else{
            Node temp = head;
            
            head = newNode;
        	head.next = temp;
            
        	size++;
        }
        
    }

    public int pop() {
        //Implement the pop() function
        if(head==null){
            return -1;
        }
        int data = head.data;
        head = head.next;
        size--;
        return data;
    }

    public int top() {
        if(head == null){
            return -1;
        }
        
        return head.data;
        //Implement the top() function
    }
}
