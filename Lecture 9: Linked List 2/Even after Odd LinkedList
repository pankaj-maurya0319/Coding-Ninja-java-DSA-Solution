/*

    Following is the Node class already written for the Linked List

    class LinkedListNode<T> {
        T data;
        LinkedListNode<T> next;
    
        public LinkedListNode(T data) {
            this.data = data;
        }
    }

*/


public class Solution {

	public static LinkedListNode<Integer> evenAfterOdd(LinkedListNode<Integer> head) {
		
        if(head==null || head.next==null){
            return head;
        }
        LinkedListNode<Integer> evenHead = null;
        LinkedListNode<Integer> oddHead = null;
        LinkedListNode<Integer> evenTail = null;
        LinkedListNode<Integer> oddTail = null;
        LinkedListNode<Integer> temp = head;
        
        while(temp!=null){
            
            if(temp.data%2==0){
                if(evenHead==null){
                    evenHead = temp;
                    evenTail = temp;
                }else{
                    evenTail.next = temp;
                    evenTail = evenTail.next;
                }
            }else{
               if(oddHead==null){
                    oddHead = temp;
                    oddTail = temp;
                }else{
                    oddTail.next = temp;
                    oddTail = oddTail.next;
                }
            }
            temp = temp.next;
        }
       if(oddHead!=null){
           oddTail.next = evenHead;
       }else{
           return evenHead;
       }
        if(evenHead!=null){
            evenTail.next = null;
        }
        
        return oddHead;
	}
}
